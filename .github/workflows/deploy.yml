# .github/workflows/deploy.yml
name: Deploy

on:
  workflow_run:
    workflows: ["Build", "Test"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      image_tag:
        description: 'Docker image tag to deploy'
        required: false
        type: string

env:
  HELM_CHART_NAME: your-app-chart
  HELM_CHART_VERSION: 1.0.0

jobs:
  deploy-staging:
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: 
      name: staging
      url: https://staging.yourapp.com
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: '1.27.0'

    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG_STAGING }}" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Add Helm repository
      run: |
        helm repo add your-repo https://your-dockerhub-username.github.io/helm-charts
        helm repo update

    - name: Determine image tag
      id: image-tag
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.image_tag }}" != "" ]]; then
          echo "tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=main-${{ github.sha }}" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to Staging
      run: |
        helm upgrade --install ${{ env.HELM_CHART_NAME }}-staging \
          your-repo/${{ env.HELM_CHART_NAME }} \
          --version ${{ env.HELM_CHART_VERSION }} \
          --namespace staging \
          --create-namespace \
          --set image.tag=${{ steps.image-tag.outputs.tag }} \
          --set environment=staging \
          --set ingress.hosts[0].host=staging.yourapp.com \
          --set resources.requests.cpu=100m \
          --set resources.requests.memory=128Mi \
          --set resources.limits.cpu=500m \
          --set resources.limits.memory=512Mi \
          --set replicaCount=2 \
          --wait --timeout=10m

    - name: Run smoke tests
      run: |
        kubectl wait --for=condition=ready pod -l app=${{ env.HELM_CHART_NAME }} -n staging --timeout=300s
        curl -f https://staging.yourapp.com/health || exit 1

  deploy-production:
    if: (github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://yourapp.com
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: '1.27.0'

    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG_PRODUCTION }}" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Add Helm repository
      run: |
        helm repo add your-repo https://your-dockerhub-username.github.io/helm-charts
        helm repo update

    - name: Determine image tag
      id: image-tag
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.image_tag }}" != "" ]]; then
          echo "tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=main-${{ github.sha }}" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to Production
      run: |
        helm upgrade --install ${{ env.HELM_CHART_NAME }}-prod \
          your-repo/${{ env.HELM_CHART_NAME }} \
          --version ${{ env.HELM_CHART_VERSION }} \
          --namespace production \
          --create-namespace \
          --set image.tag=${{ steps.image-tag.outputs.tag }} \
          --set environment=production \
          --set ingress.hosts[0].host=yourapp.com \
          --set resources.requests.cpu=200m \
          --set resources.requests.memory=256Mi \
          --set resources.limits.cpu=1000m \
          --set resources.limits.memory=1Gi \
          --set replicaCount=3 \
          --set autoscaling.enabled=true \
          --set autoscaling.minReplicas=3 \
          --set autoscaling.maxReplicas=10 \
          --wait --timeout=15m

    - name: Run smoke tests
      run: |
        kubectl wait --for=condition=ready pod -l app=${{ env.HELM_CHART_NAME }} -n production --timeout=300s
        curl -f https://yourapp.com/health || exit 1

    - name: Notify deployment success
      if: success()
      run: |
        echo "üöÄ Production deployment successful!"
        # Add Slack/Teams/Discord notification here if needed

  rollback:
    if: failure()
    runs-on: ubuntu-latest
    needs: [deploy-production]
    environment: production
    
    steps:
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG_PRODUCTION }}" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Rollback deployment
      run: |
        helm rollback ${{ env.HELM_CHART_NAME }}-prod -n production
        echo "‚ö†Ô∏è Production deployment rolled back due to failure!"